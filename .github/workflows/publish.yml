name: Publish a new version on Chromatic and npm

on:
  push:
    branches:
      - main

jobs:
  chromatic:
    name: Publish on Chromatic
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.12'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm install

    - name: Publish to Chromatic
      uses: chromaui/action@v1
      with:
        projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  npm:
    name: Test, Build and Publish on npm
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.12'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

    - name: Build module
      run: npm run build

    - name: Get local version
      id: local_version
      run: echo "::set-output name=version::$(node -p \"require('./package.json').version\")"

    - name: Get remote version
      id: remote_version
      run: echo "::set-output name=version::$(npm show your-package-name version)"

    - name: Check if versions are different
      id: version_check
      run: |
        if [ "${{ steps.local_version.outputs.version }}" != "${{ steps.remote_version.outputs.version }}" ]; then
          echo "::set-output name=should_publish::true"
        else
          echo "::set-output name=should_publish::false"
        fi

    - name: Publish minor version
      if: steps.version_check.outputs.should_publish == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}